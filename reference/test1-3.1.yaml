openapi: 3.1.0
x-stoplight:
  id: xo59qsrj3ce1n
info:
  title: test1-3.1
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      x-stoplight:
        id: dcwi29gjnmky3
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      x-stoplight:
        id: jlkfe7wuc46xe
    put:
      summary: Your PUT endpoint
      tags: []
      responses:
        '200':
          description: OK
      operationId: put-users-userId
      x-stoplight:
        id: 84is9p9rysya6
    post:
      summary: Your POST endpoint
      tags: []
      responses:
        '200':
          description: OK
      operationId: post-users-userId
      x-stoplight:
        id: 2h6texagy9va6
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-stoplight:
        id: 2srsombbngn2d
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          x-stoplight:
            id: jn3ijwz90z57y
        firstName:
          type: string
          x-stoplight:
            id: d9ih2dm6wgq61
        lastName:
          type: string
          x-stoplight:
            id: ef2rt8n3y9foy
        email:
          type: string
          format: email
          x-stoplight:
            id: e4zrzy1sdx7me
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: jrxghnoe8nss4
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
          x-stoplight:
            id: h1jc6rfycl7zu
        createDate:
          type: string
          format: date
          description: The date that the user was created.
          x-stoplight:
            id: krgwlsjs54oc1
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-stoplight:
        id: u4020vd6mbmma
    test2':
      title: test2
      x-stoplight:
        id: 98w9ssn95jgjx
      type: object
      properties:
        id:
          type: string
          x-stoplight:
            id: 5fw6dvnga96qz
        email:
          type: string
          x-stoplight:
            id: pwyi6ep6m4khp
    refer:
      title: refer
      x-stoplight:
        id: 3basz6v9aygtv
      type: object
      properties:
        refer1:
          $ref: '#/components/schemas/test2'''
          x-stoplight:
            id: ufx0mh3550wmm
        refer2:
          $ref: '#/components/schemas/User'
          x-stoplight:
            id: 65wjto4gf7lc7
